1)
def ultima_aparicion(s: list, e: int) -> int:
    apariciones:list = []
    for i in range(len(s)-1):
        if e == s[i]:
            apariciones.append(i)
        i+=1
    return apariciones[-1]

print(ultima_aparicion([1,2,3,4,56,1,6,3,1,23],1))

2)
def noRep(s:list)->list:
    listasinRep = set()
    for i in range(len(s)):
        listasinRep.add(s[i])
        i+=1
    return list(listasinRep)


def elementos_exclusivos(s: list, t: list) -> list:
    res:list=[]
    s = noRep(s)
    t = noRep(t)
    for i in range(len(s)):
        if s[i] in t and not s[i] in res:
            passfrom solucion import ultima_aparicion

class Ej1Test(unittest.TestCase):
    def test_trivial(self):
        res = ultima_aparicion([1],1)
        self.assertEqual(res, 0)

    def test_ejemplo(self):
        res = ultima_aparicion([-1,4,0,4,100,0,100,0,-1,-1],0)
        self.assertEqual(res, 7)

class Ej2Test(unittest.TestCase):
    def test_trivial(self):
        res = elementos_exclusivos([],[])
        self.assertEqual(res, [])

    def test_ejemplo(self):
        resEsperado = [[3,4,5],[3,5,4],[4,3,5],[4,5,3],[5,3,4],[5,4,3]]
        res = elementos_exclusivos([-1,4,0,4,3,0,100,0,-1,-1],[0,100,5,0,100,-1,5])
        self.assertIn(res, resEsperado)

class Ej3Test(unittest.TestCase):
    def test_trivial(self):
        res = contar_traducciones_iguales({},{})
        self.assertEqual(res,0)

    def test_ejemplo(self):
        aleman = {"Mano": "Hand", "Pie": "Fuss", "Dedo": "Finger", "Cara": "Gesicht"}
        ingles = {"Pie": "Foot", "Dedo": "Finger", "Mano": "Hand"}
        res = contar_traducciones_iguales(from solucion import ultima_aparicion

class Ej1Test(unittest.TestCase):
    def test_trivial(self):
        res = ultima_aparicion([1],1)
        self.assertEqual(res, 0)

    def test_ejemplo(self):
        res = ultima_aparicion([-1,4,0,4,100,0,100,0,-1,-1],0)
        self.assertEqual(res, 7)

class Ej2Test(unittest.TestCase):
    def test_trivial(self):
        res = elementos_exclusivos([],[])
        self.assertEqual(res, [])

    def test_ejemplo(self):
        resEsperado = [[3,4,5],[3,5,4],[4,3,5],[4,5,3],[5,3,4],[5,4,3]]
        res = elementos_exclusivos([-1,4,0,4,3,0,100,0,-1,-1],[0,100,5,0,100,-1,5])
        self.assertIn(res, resEsperado)

class Ej3Test(unittest.TestCase):
    def test_trivial(self):
        res = contar_traducciones_iguales({},{})
        self.assertEqual(res,0)

    def test_ejemplo(self):
        aleman = {"Mano": "Hand", "Pie": "Fuss", "Dedo": "Finger", "Cara": "Gesicht"}
        ingles = {"Pie": "Foot", "Dedo": "Finger", "Mano": "Hand"}
        res = contar_traducciones_iguales(ingles,aleman)
        self.assertEqual(res,2)


class Ej4Test(unittest.TestCase):
    def test_trivial(self):
        res = convertir_a_diccionario([])
        self.assertEqual(res, {})
    
    def test_ejemplo(self):
        resEsperado = {-1:3, 0:1, 4:1, 100:2}
        res = convertir_a_diccionario([-1,0,4,100,100,-1,-1])
        self.assertEqual(res,resEsperado)



if __name__ == '__main__':
    unittest.main(verbosity=2)ingles,aleman)
        self.assertEqual(res,2)


class Ej4Test(unittest.TestCase):
    def test_trivial(self):
        res = convertir_a_diccionario([])
        self.assertEqual(res, {})
    
    def test_ejemplo(self):
        resEsperado = {-1:3, 0:1, 4:1, 100:2}
        res = convertir_a_diccionario([-1,0,4,100,100,-1,-1])
        self.assertEqual(res,resEsperado)



if __name__ == '__main__':
    unittest.main(verbosity=2)
        else:
            res.append(s[i])
        i+=1
    for x in range(len(t)):
        if t[x] in s and not t[x] in res:
            pass
        else:
            res.append(t[x])
        x+=1    
    return res

print(elementos_exclusivos([-1, 4, 0, 4, 3, 0, 100, 0, -1, -1],[0, 100, 5, 0, 100, -1, 5]))

3)
def contar_traducciones_iguales(ingles: dict, aleman: dict) -> int:
    res:int=0
    
    for clave in ingles:
        if clave in aleman:
            if ingles[clave] == aleman[clave]:
                res+=1
    return res

print(contar_traducciones_iguales({"Mano": "Hand", "Pie": "Foot", "Dedo": "Finger", "Cara": "Gesicht"},{"Pie": "Foot", "Dedo": "Finger", "Mano": "Hand"}))

4)
def convertir_a_diccionario(lista: list) -> dict:
    res:dict={}
    for i in lista:
        if i in res:
            res[i] = res[i] + 1
        else:
            res[i] = 1
    return res

print(convertir_a_diccionario([-1,0,4,100,100,-1,-1]))




